{"version":3,"sources":["logo.svg","components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","useState","color","backgroundColor","myStyle","setStyle","btnText","setBtnText","toggleStyle","className","mode","style","id","type","onClick","Navbar","to","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","aria-labelledby","toggleMode","for","placeholder","TextForm","text","setText","htmlFor","value","rows","onChange","event","target","toUpperCase","showAlert","split","length","defaultProps","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","path","element","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yNAAe,I,4BCgFAA,EA9ED,SAACC,GAAW,IAAD,kBAEMC,mBAAS,CAChCC,MAAM,QACNC,gBAAgB,UAJC,mBAEdC,EAFc,KAENC,EAFM,OAOMJ,mBAAS,oBAPf,mBAOdK,EAPc,KAONC,EAPM,KAefC,EAAY,WACI,SAAfJ,EAAQF,OACPG,EAAS,CACLH,MAAM,QACNC,gBAAgB,UAEpBI,EAAW,sBAEXF,EAAS,CACLH,MAAM,QACNC,gBAAgB,UAEpBI,EAAW,uBAInB,OACM,yBAAKE,UAAS,wBAAmBT,EAAMU,MAAQC,MAAOP,GAAtD,sBAAsE,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,UAA1G,0BACA,0CACE,yBAAKD,UAAU,iBAAiBG,GAAG,mBAAmBD,MAAOP,GAA7D,sBAA6E,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,UAAjH,0BACA,sBAAKD,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,aAApC,SACA,2BAAQH,UAAU,mBAAmBE,MAAOP,GAA5C,sBAA4D,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAAnJ,qBAAkK,UAAlK,+BAA0L,YAA1L,+BAAoN,gBAApN,8BAAiP,QAAjP,8BAAsQ,eAAtQ,oDAIA,wBAAKE,GAAG,cAAcH,UAAU,mCAAmCE,MAAOP,GAA1E,sBAA0F,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAAjL,gCAA2M,cAA3M,+BAAuO,qBAAvO,yBACA,sBAAKD,UAAU,iBAAf,UACI,8EADJ,6WACua,mDADva,mDADA,OAMJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,aAApC,SACA,2BAAQH,UAAU,6BAA6BE,MAAOP,GAAtD,sBAAsE,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAA7J,qBAA4K,UAA5K,+BAAoM,YAApM,+BAA8N,gBAA9N,8BAA2P,SAA3P,8BAAiR,eAAjR,oDAIA,wBAAKE,GAAG,cAAcH,UAAU,8BAA8BE,MAAOP,GAArE,sBAAqF,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAA5K,gCAAsM,cAAtM,+BAAkO,qBAAlO,yBACA,sBAAKD,UAAU,iBAAf,UACI,+EADJ,8WACya,mDADza,mDADA,OAMJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,eAApC,SACA,2BAAQH,UAAU,6BAA6BE,MAAOP,GAAtD,sBAAuE,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAA9J,qBAA6K,UAA7K,+BAAqM,YAArM,+BAA+N,kBAA/N,8BAA8P,SAA9P,8BAAoR,iBAApR,oDAIA,wBAAKE,GAAG,gBAAgBH,UAAU,8BAA8BE,MAAOP,GAAvE,sBAAuF,CAACF,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,QAAQP,gBAA4B,QAAZH,EAAMU,KAAa,QAAQ,UAA9K,gCAAwM,gBAAxM,+BAAsO,qBAAtO,yBACA,sBAAKD,UAAU,iBAAf,UACI,8EADJ,8WACwa,mDADxa,mDADA,SA/BJ,IAsCA,wBAAQI,KAAK,SAASJ,UAAU,kBAAkBK,QA7DjC,WACrBN,KA4DI,SAA+EF,MAxCjF,KC3BJS,EAAS,SAACf,GAEZ,OACI,qBAAKS,UAAS,yCAAoCT,EAAMU,KAA1C,eAAqDV,EAAMU,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeO,GAAG,YAAlC,SAA+ChB,EAAMiB,QACrD,wBAAQR,UAAU,iBAAiBI,KAAK,SAASK,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAA5L,SACE,sBAAMb,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BG,GAAG,yBAA7C,UACE,qBAAIH,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYc,eAAa,OAAOP,GAAG,YAAnD,yBAEF,oBAAIP,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYO,GAAG,SAA/B,qBAGF,qBAAIP,UAAU,oBAAd,UACE,cAAC,IAAD,CAAMA,UAAU,2BAA2BO,GAAG,IAAIJ,GAAG,iBAAiBY,KAAK,SAASN,iBAAe,WAAWG,gBAAc,QAA5H,sBAGA,qBAAIZ,UAAU,gBAAgBgB,kBAAgB,iBAA9C,UACE,6BAAI,cAAC,IAAD,CAAMhB,UAAU,gBAAgBO,GAAG,IAAnC,sBACJ,6BAAI,cAAC,IAAD,CAAMP,UAAU,gBAAgBO,GAAG,IAAnC,8BACJ,6BAAI,oBAAIP,UAAU,uBAClB,6BAAI,cAAC,IAAD,CAAMA,UAAU,gBAAgBO,GAAG,IAAnC,4CAIV,sBAAKP,UAAU,8BAAf,UACM,uBAAOA,UAAU,mBAAmBK,QAASd,EAAM0B,WAAYb,KAAK,WAAWW,KAAK,SAASZ,GAAG,2BAChG,uBAAOH,UAAU,mBAAmBkB,IAAI,yBAAyBhB,MAAO,CAACT,MAAoB,QAAZF,EAAMU,KAAa,QAAQ,SAA5G,0BAEN,uBAAMD,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBI,KAAK,SAASe,YAAY,SAASN,aAAW,WACnF,wBAAQb,UAAU,0BAA0BI,KAAK,SAAjD,gCASCE,ICnDA,SAASc,EAAS7B,GAC7B,IADoC,EAmBbC,mBAAS,mBAnBI,mBAmB7B6B,EAnB6B,KAmBxBC,EAnBwB,KAqBpC,OACA,qCACQ,sBAAKtB,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOuB,QAAQ,UAAUvB,UAAU,aAAnC,8BACA,0BAAUA,UAAU,eAAewB,MAAOH,EAAMlB,GAAG,UAAUsB,KAAK,IAAIC,SAlBjE,SAACC,GAElBL,EAAQK,EAAMC,OAAOJ,aAkBb,wBAAQxB,UAAU,uBAAuBK,QA3BjC,WAEhBiB,EAAQ,YACRA,EAAQD,EAAKQ,eACbtC,EAAMuC,UAAU,8BAA8B,YAuBtC,gCACA,wBAAQ9B,UAAU,uBAAuBK,QAhBnC,SAACsB,GAEfL,EAAQ,IACR/B,EAAMuC,UAAU,eAAe,YAavB,8BAGJ,sBAAK9B,UAAU,iBAAf,UACI,mDACA,8BAAIqB,EAAKU,MAAM,KAAKC,OAApB,UAAmCX,EAAKW,OAAxC,iBACA,yCACA,4BAAIX,UDiBpBf,EAAO2B,aAAa,CAClBzB,MAAM,kBE1CO0B,MAXf,SAAe3C,GACX,OAEOA,EAAM4C,OAAS,qBAAKnC,UAAS,sBAAiBT,EAAM4C,MAAM/B,KAA7B,gCAAiEW,KAAK,QAApF,SACTxB,EAAM4C,MAAMC,OCmEdC,MAzDf,WAAgB,IAAD,EACW7C,mBAAS,SADpB,mBACNS,EADM,KACAqC,EADA,OAEa9C,mBAAS,MAFtB,mBAEN2C,EAFM,KAECI,EAFD,KAIPT,EAAU,SAACU,EAAQpC,GACvBmC,EAAS,CACPH,IAAII,EACJpC,KAAKA,IAEPqC,YAAW,WACTF,EAAS,QACR,OAECtB,EAAW,WACL,UAAPhB,GACDqC,EAAQ,QACRI,SAASC,KAAKzC,MAAMR,gBAAkB,QACtCgD,SAASC,KAAKzC,MAAMT,MAAQ,QAC5BqC,EAAU,oBAAoB,WAC9BY,SAASlC,MAAQ,WAGjB8B,EAAQ,SACRI,SAASC,KAAKzC,MAAMR,gBAAkB,QACtCgD,SAASC,KAAKzC,MAAMT,MAAQ,QAC5BqC,EAAU,qBAAqB,WAC/BY,SAASlC,MAAQ,YAKrB,OACE,mCACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,MAAM,QAAQP,KAAMA,EAAMgB,WAAYA,IAC9C,sBAAKjB,UAAU,iBAAf,UACA,cAAC,EAAD,CAAOmC,MAAOA,IACd,eAAC,IAAD,WACD,cAAC,IAAD,CACCS,KAAK,IACLC,QACE,sBAAM3C,MAAO,CAAE4C,QAAS,QAAxB,SACE,0DAGA,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,EAAD,CAAO5C,KAAMA,EAAMgB,WAAYA,MAC7D,cAAC,IAAD,CAAO2B,KAAK,YAAYC,QAAS,cAACzB,EAAD,CAAUU,UAAWA,kBClDjDiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAI1BZ,M","file":"static/js/main.d57efa8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react';\r\n\r\nconst About = (props) => {\r\n\r\n    const [myStyle,setStyle] = useState({\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    });\r\n    \r\n    const [btnText,setBtnText]=useState(\"Enable Dark Mode\");\r\n\r\n\r\n\r\n    const  handleToggleClick=()=>{\r\n        toggleStyle();\r\n    }\r\n\r\n    const toggleStyle=()=>{\r\n        if(myStyle.color=='white'){\r\n            setStyle({\r\n                color:'black',\r\n                backgroundColor:'white' \r\n            });\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }else{\r\n            setStyle({\r\n                color:'white',\r\n                backgroundColor:'black' \r\n            });\r\n            setBtnText(\"Enable Light Mode\");\r\n        }\r\n    }\r\n\r\n    return (\r\n          <div className={`container  bg-${props.mode}`} style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\"}}>\r\n          <h1>About Us</h1>\r\n            <div className=\"accordion my-3\" id=\"accordionExample\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\"}}>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle}  style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={myStyle} style={{color : props.mode==\"dark\"?\"white\":\"black\",backgroundColor:props.mode==\"dark\"?\"black\":\"white\"}} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleToggleClick}>{btnText}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n \r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router';\r\nimport About from './About';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/textform\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\" > \r\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/textform\" >Text Form</Link>\r\n              </li>\r\n              <li className=\"nav-item\" >\r\n                <Link className=\"nav-link \" to=\"/about\" >About</Link>\r\n              </li>\r\n             \r\n              <li className=\"nav-item dropdown\">\r\n                <Link className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Dropdown\r\n                </Link>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><Link className=\"dropdown-item\" to=\"#\">Action</Link></li>\r\n                  <li><Link className=\"dropdown-item\" to=\"#\">Another action</Link></li>\r\n                  <li><hr className=\"dropdown-divider\"/></li>\r\n                  <li><Link className=\"dropdown-item\" to=\"#\">Something else here</Link></li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch mx-5\">\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\"/>\r\n                  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\" style={{color : props.mode==\"dark\"?\"white\":\"black\"}}>Dark Mode</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>        \r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nNavbar.defaultProps={\r\n  title:'Set title here',\r\n}\r\n\r\nNavbar.propTypes={\r\n   title:PropTypes.string.isRequired,\r\n\r\n}","import React,{useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"uppercase was clicked\");\r\n        setText(\"new text\");\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Text converted to uppercase\",\"success\");\r\n       \r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value);\r\n       \r\n    }\r\n    const handleClear=(event)=>{\r\n        // console.log(\"Clear\");\r\n        setText(\"\");\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n       \r\n    }\r\n    const [text,setText] = useState(\"Enter text here\");\r\n    \r\n    return (\r\n    <>\r\n            <div className=\"container\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"textbox\" className=\"form-label\">Example textarea</label>\r\n                    <textarea className=\"form-control\" value={text} id=\"textbox\" rows=\"3\" onChange={handleOnChange}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert Uppercaase</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear Textbox</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\" >\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length} words,{text.length} characters</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n     </>\r\n    ) \r\n}\r\n// style={{color:props.mode===\"dark\"? \"white\":\"black\"}}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                {props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n       \r\n    )\r\n} \r\n    \r\nexport default Alert \r\n","import logo from './logo.svg';\nimport { useState } from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from \"./components/TextForm\";\nimport About from './components/About';\nimport Alert from './components/Alert';\n\nlet name= \"harsh\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showAlert(\"dark mode enabled\",\"success\");\n      document.title = \"darker\";\n\n    }else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"light mode enabled\",\"success\");\n      document.title = \"lighter\";\n      \n    }\n  };\n\n  return (\n    <>\n    <BrowserRouter>\n      <Navbar title=\"utilz\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n      <Alert alert={alert}/>\n      <Routes>\n     <Route\n      path=\"*\"\n      element={\n        <main style={{ padding: \"1rem\" }}>\n          <p>There's nothing here!</p>\n        </main>\n      }/>\n          <Route path=\"/about\" element={<About mode={mode} toggleMode={toggleMode}/>}></Route>\n          <Route path=\"/textform\" element={<TextForm showAlert={showAlert} />}></Route>\n      </Routes>\n     \n      {/* <TextForm showAlert={showAlert} />\n      <About mode={mode} toggleMode={toggleMode}/> */}\n      </div>\n   </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}